##Routine for concatenating each q% column of .txt output files from the Horiba laser granulometre in one excel file
##code author: @Milena Kury

import pandas as pd
import numpy as np
import os 
import glob
from natsort import natsorted

path = r"D:\PhD\cores\Laser granulo\GL17-13-I"
arr = os.listdir(path)
## To see what each file will look like with the option to open, remove the first lines and remove the diameter column and separate the values by tab
#path2 = r"D:\GL16/202405071207743-1.txt"
#df = pd.read_csv(path,  encoding='utf8', error_bad_lines=False)
df = pd.read_csv(path, encoding='mbcs', skiprows = 37, delimiter='\t', usecols=['q(%)', 'UnderSize(%)'])
print (df)

## change the names of the files in the folder so I can understand which samples they are refering to without having a long name
# Define the directory containing your .txt files

# Loop through all files in the directory
for filename in os.listdir(path):
    if filename.endswith(".txt"):
        # Remove the first 16 characters from the file name (depends on granulometre nomenclature - adjust accordingly)
        new_filename = filename[16:]
        
        # Construct the new file path
        old_path = os.path.join(path, filename)
        new_path = os.path.join(path, new_filename)
        
        # Rename the file
        os.rename(old_path, new_path)
        print(f'Renamed: {filename} to {new_filename}')
#Get the name sequence of the files, sorted numerically
#from natsort import natsorted

arr = os.listdir(path)

# Removing the '.txt' from the strings and creating a .txt file with the list of names in order
sequence = map(lambda each:each.strip(".txt"), arr)
sequence = natsorted(sequence)

with open('sequence.txt','w',encoding='utf-8') as tfile:
    tfile.write('\n'.join(sequence))

print(sequence)

##Check if the code is working and files can be found through glob looping

import glob
import os

path_loop = r'D:\PhD\cores\Laser granulo\GL17-13-I'
pattern = '*.txt'

files = glob.glob(os.path.join(path_loop, pattern))
print("Detected files:", files)

# Define the directory containing your text files
path_loop = r'D:\PhD\cores\Laser granulo\GL17-13-I'

# Define the file pattern to match
pattern = '*.txt'

# Initialize an empty list to store columns from all files
all_columns = []

# Loop through all text files in the directory
for file in glob.glob(os.path.join(path_loop, pattern)):
    # Extract the file name without extension
    file_name = os.path.splitext(os.path.basename(file))[0]
    
    # Use pandas to read in each text file
    df = pd.read_csv(file, encoding='mbcs', skiprows=37, delimiter='\t', usecols=['q(%)'])
    #df = pd.read_csv(file, encoding='mbcs', skiprows=37, delimiter='\t', usecols=['q(%)', 'UnderSize(%)'])
    
    # Rename the columns by appending the file name
    df.columns = [f"{file_name}_{col}" for col in df.columns]
    
    # Append all columns of the data to the list
    all_columns.append(df)
    
    # Sort columns numerically
    all_columns = natsorted(all_columns)
    
print(all_columns)

# Concatenate all the DataFrames in the list into a single DataFrame in numerical order defined by user (sequence)
new_df = pd.concat(all_columns, axis=1)

# Print the resulting DataFrame
print(new_df)

# Define the path to the output folder
output_folder = path

# Define the output file name
output_file = 'GL17-13-I-all-data.xlsx'

# Save the DataFrame as an Excel file in the output folder
new_df.to_excel(output_file, index=False)
